server:
  port: 8092
#  port: 80
  hostname: localhost
#  hostname: 192.168.0.106
  
spring:
  application:
    name: micro-purchase
  data:
    mongodb:
      database: db_purchase
#      uri: mongodb://${server.hostname}:12500/${spring.data.mongodb.database}
      uri: mongodb://arodriguezcu:WoZiG7Enr4sZXJsPA6J1yAICIAeGAzczurFJNm8k3q0apmZjMRPlAdHKqoA4vCnXvwLT40VxnskXjU6AwznsuA==@arodriguezcu.mongo.cosmos.azure.com:10255/${spring.data.mongodb.database}?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@arodriguezcu@
  kafka:
    bootstrap-servers: ${kafka.server.hostname}:${kafka.server.port}

kafka:
  server:
    hostname: 20.94.188.219
    port: 9092

eureka:
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: az-eureka-server.azurewebsites.net
      
topic:
  name: purchase-topic
  partitions: 1
  replicas: 1
            
msg:
  error:
    registro:
      notfound:
        all: PURCHASES NO ENCONTRADOS
        create: PURCHASE NO SE PUDO CREAR      
        update: PURCHASE NO IDENTIFICADO PARA ACTUALIZAR
        delete: PURCHASE NO IDENTIFICADO PARA ELIMINAR      
      product:
        all: PRODUCTOS NO ENCONTRADOS
        exists: PRODUCTO NO EXISTE
        available: CLIENTE YA CUENTA CON EL PRODUCTO
        business: CLIENTE EMPRESARIAL NO PUEDE OBTENER EL PRODUCTO
        personal: CLIENTE PERSONAL NO PUEDE OBTENER EL PRODUCTO
      customer:
        all: CLIENTE NO ENCONTRADO
        exists: CLIENTES NO EXISTEN      
      card:
        exists: NUMERO DE TARJETA YA EXISTE
        notexists: NUMERO DE TARJETA NO EXISTE
      positive: MONTO DEBE SER POSITIVO
      owners: TITULARES DEBEN SER EL MISMO TIPO DE CLIENTE (PERSONAL O EMPRESARIAL)
      business.owner: CLIENTE EMPRESARIAL MAXIMO 1 TITULAR
      minimum.owner: MINIMO 1 TITULAR
      credit.card: NECESITA UNA TARJETA DE CREDITO
      purchase.delete: PURCHASE ELIMINADO
            
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
    instances:
      purchaseServiceCircuitBreaker:
        baseConfig: default

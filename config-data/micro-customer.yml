server:
  port: 8090
#  port: 80
  hostname: localhost
#  hostname: 192.168.0.106
    
spring:
  application:
    name: micro-customer
  data:
    mongodb:
      database: db_customer
#      uri: mongodb://${server.hostname}:12500/${spring.data.mongodb.database}
      uri: mongodb://arodriguezcu:WoZiG7Enr4sZXJsPA6J1yAICIAeGAzczurFJNm8k3q0apmZjMRPlAdHKqoA4vCnXvwLT40VxnskXjU6AwznsuA==@arodriguezcu.mongo.cosmos.azure.com:10255/${spring.data.mongodb.database}?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@arodriguezcu@
  kafka:
    bootstrap-servers: ${kafka.server.hostname}:${kafka.server.port}

kafka:
  server:
    hostname: 20.94.188.219
    port: 9092
  topic:
    name: customer-topic
    partitions: 1
    replicas: 1

eureka:
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: az-eureka-server.azurewebsites.net

msg:
  error:
    registro:
      notfound:
        all: CLIENTES NO ENCONTRADOS 
        create: CLIENTE NO SE PUDO CREAR
        update: CLIENTE NO IDENTIFICADO PARA ACTUALIZAR
        delete: CLIENTE NO IDENTIFICADO PARA ELIMINAR      
        customer: CLIENTE NO IDENTIFICADO
      if.exists: CLIENTE YA EXISTE
      customer.delete: CLIENTE ELIMINADO

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
    instances:
      customerServiceCircuitBreaker:
        baseConfig: default
